#!/bin/bash
# Take one argument as directory; finds all regular files immediately under D
# that are duplicates, and replaces the duplicates with hard links.

# It keeps the file whose name is lexicographically first
# it prefers files whose name start with "." to other files

# If the script has a problem reading a file (for example, if the file not
# readable), it will report the error and not treat it as a duplicate of any 
# file.

# You can improve the efficiency by improving the loop, but it is not my major
# concern here.

OIFS="$IFS"
# Here we assume that there is no newline character in the file names.
IFS=$'\n'
files="$(find $1 -maxdepth 1 -type f -readable -printf "%f\n" | sort)"
for file1 in $files; do
  for file2 in $files; do
    cmp -s "$file1" "$file2"&&ln -f "$file1" "$file2" &> /dev/null
  done
done
IFS="$OIFS"

